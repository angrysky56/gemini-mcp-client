[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-gemini-client"
version = "0.1.0"
description = "Gemini-powered MCP (Model Context Protocol) Client"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "angrysky56", email = "your-email@example.com"}
]
requires-python = ">=3.12"
dependencies = [
    "google-generativeai>=0.8.5",
    "mcp>=1.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
# Core Gemini packages (install at least one)
gemini-tool-agent = ["gemini-tool-agent>=0.1.0"]
google-generativeai = ["google-generativeai>=0.8.0"]
google-genai = ["google-genai>=1.0.0"]

# All Gemini options
all-gemini = [
    "gemini-tool-agent>=0.1.0",
    "google-generativeai>=0.8.0", 
    "google-genai>=1.0.0",
]

dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "ruff>=0.1.0",
    "pyright>=1.1.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
mcp-gemini-client = "mcp_gemini_client.cli:main"

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP", "B", "C4", "SIM", "TCH"]
ignore = ["E501"]  # Ignore line length for now

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "basic"  # Changed from strict to basic
reportMissingImports = true
reportMissingTypeStubs = false
reportOptionalMemberAccess = false
reportOptionalSubscript = false

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
